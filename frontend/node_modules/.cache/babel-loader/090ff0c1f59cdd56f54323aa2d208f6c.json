{"remainingRequest":"/home/gregory/Desktop/chat/src/frontend/node_modules/babel-loader/lib/index.js!/home/gregory/Desktop/chat/src/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/gregory/Desktop/chat/src/frontend/src/api/api.js","dependencies":[{"path":"/home/gregory/Desktop/chat/src/frontend/src/api/api.js","mtime":1586085261925},{"path":"/home/gregory/Desktop/chat/src/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gregory/Desktop/chat/src/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/gregory/Desktop/chat/src/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvZ3JlZ29yeS9EZXNrdG9wL2NoYXQvc3JjL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgYWxlcnROb3RpZmllckNoYW5uZWwgfSBmcm9tICcuLi9tYWluJzsKCnZhciBnZXQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHBhdGgpIHsKICAgIHZhciB1cmksIHJlc3VsdERhdGEsIHJlc3VsdFN0YXR1cywgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHVyaSA9IGdldFJlcXVlc3RVcmkocGF0aCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHVyaSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHJlc3VsdERhdGEgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgICAgIHJlc3VsdFN0YXR1cyA9IHJlc3BvbnNlLmRhdGEuc3RhdHVzOwogICAgICAgICAgICBjb25zb2xlLmxvZygiR0VUOiByZXN1bHRTdGF0dXM6ICIsIHJlc3VsdFN0YXR1cyk7CgogICAgICAgICAgICBpZiAocmVzdWx0U3RhdHVzICE9PSB0cnVlKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgICAgICAgIGFsZXJ0Tm90aWZpZXJDaGFubmVsLiRlbWl0KCdzaG93JywgewogICAgICAgICAgICAgICAgZHVyYXRpb246IDUsCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnR2V0IHJlcXVlc3QgZXJyb3InCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3VsdERhdGEpOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBnZXQoX3gpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIHBvc3QgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocGF0aCkgewogICAgdmFyIGRhdGEsCiAgICAgICAgdXJpLAogICAgICAgIHJlc3BvbnNlLAogICAgICAgIF9hcmdzMiA9IGFyZ3VtZW50czsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGRhdGEgPSBfYXJnczIubGVuZ3RoID4gMSAmJiBfYXJnczJbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmdzMlsxXSA6IG51bGw7CiAgICAgICAgICAgIHVyaSA9IGdldFJlcXVlc3RVcmkocGF0aCk7CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QodXJpLCBkYXRhKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJQT1NUOiByZXN1bHRTdGF0dXM6ICIsIHJlc3BvbnNlLmRhdGEuc3RhdHVzKTsKCiAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN0YXR1cyAhPT0gdHJ1ZSkgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJmYWlsZWQgcmVzcG9uc2U6ICIsIHJlc3BvbnNlKTsKICAgICAgICAgICAgICBhbGVydE5vdGlmaWVyQ2hhbm5lbC4kZW1pdCgnc2hvdycsIHsKICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA1LAogICAgICAgICAgICAgICAgbWVzc2FnZTogJ1Bvc3QgcmVxdWVzdCBlcnJvcicKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIHBvc3QoX3gyKSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CgpmdW5jdGlvbiBnZXRSZXF1ZXN0VXJpKHBhdGgpIHsKICByZXR1cm4gJy9hcGkvdjEvJyArIHBhdGg7Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBnZXQ6IGdldCwKICBwb3N0OiBwb3N0Cn07"},{"version":3,"sources":["/home/gregory/Desktop/chat/src/frontend/src/api/api.js"],"names":["axios","alertNotifierChannel","get","path","uri","getRequestUri","response","resultData","data","resultStatus","status","console","log","$emit","duration","message","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,SAArC;;AAEA,IAAMC,GAAG;AAAA,qEAAG,iBAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACFC,YAAAA,GADE,GACIC,aAAa,CAACF,IAAD,CADjB;AAAA;AAAA,mBAKaH,KAAK,CAACE,GAAN,CAAUE,GAAV,CALb;;AAAA;AAKJE,YAAAA,QALI;AAMRC,YAAAA,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcA,IAA3B;AACAC,YAAAA,YAAY,GAAGH,QAAQ,CAACE,IAAT,CAAcE,MAA7B;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,YAAnC;;AAEA,gBAAIA,YAAY,KAAK,IAArB,EAA2B;AACvBE,cAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAL,cAAAA,oBAAoB,CAACY,KAArB,CAA2B,MAA3B,EAAmC;AAACC,gBAAAA,QAAQ,EAAE,CAAX;AAAcC,gBAAAA,OAAO,EAAE;AAAvB,eAAnC;AACH;;AAbO,6CAeDR,UAfC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAHL,GAAG;AAAA;AAAA;AAAA,GAAT;;AAkBA,IAAMc,IAAI;AAAA,sEAAG,kBAAgBb,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBK,YAAAA,IAAtB,8DAA6B,IAA7B;AACHJ,YAAAA,GADG,GACGC,aAAa,CAACF,IAAD,CADhB;AAAA;AAAA,mBAGYH,KAAK,CAACgB,IAAN,CAAWZ,GAAX,EAAgBI,IAAhB,CAHZ;;AAAA;AAGLF,YAAAA,QAHK;AAITK,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCN,QAAQ,CAACE,IAAT,CAAcE,MAAlD;;AAEA,gBAAIJ,QAAQ,CAACE,IAAT,CAAcE,MAAd,KAAyB,IAA7B,EAAmC;AAC/BC,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCN,QAAjC;AACAL,cAAAA,oBAAoB,CAACY,KAArB,CAA2B,MAA3B,EAAmC;AAACC,gBAAAA,QAAQ,EAAE,CAAX;AAAcC,gBAAAA,OAAO,EAAE;AAAvB,eAAnC;AACH;;AATQ,8CAWFT,QAAQ,CAACE,IAXP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJQ,IAAI;AAAA;AAAA;AAAA,GAAV;;AAcA,SAASX,aAAT,CAAuBF,IAAvB,EAA6B;AACzB,SAAO,aAAaA,IAApB;AACH;;AAED,eAAe;AACXD,EAAAA,GAAG,EAAHA,GADW;AAEXc,EAAAA,IAAI,EAAJA;AAFW,CAAf","sourcesContent":["import axios from 'axios'\nimport { alertNotifierChannel } from '../main';\n\nconst get = async function (path) {\n    const uri = getRequestUri(path);\n    let resultData;\n    let resultStatus;\n\n    let response = await axios.get(uri);\n    resultData = response.data.data;\n    resultStatus = response.data.status;\n    console.log(\"GET: resultStatus: \", resultStatus);\n\n    if (resultStatus !== true) {\n        console.log(response);\n        alertNotifierChannel.$emit('show', {duration: 5, message: 'Get request error'});\n    }\n\n    return resultData;\n};\n\nconst post = async function (path, data = null) {\n    const uri = getRequestUri(path);\n\n    let response = await axios.post(uri, data);\n    console.log(\"POST: resultStatus: \", response.data.status);\n\n    if (response.data.status !== true) {\n        console.log(\"failed response: \", response);\n        alertNotifierChannel.$emit('show', {duration: 5, message: 'Post request error'});\n    }\n\n    return response.data;\n};\n\nfunction getRequestUri(path) {\n    return '/api/v1/' + path;\n}\n\nexport default {\n    get,\n    post,\n};\n"]}]}