{"remainingRequest":"/home/gregory/Desktop/project_chat/frontend/node_modules/thread-loader/dist/cjs.js!/home/gregory/Desktop/project_chat/frontend/node_modules/babel-loader/lib/index.js!/home/gregory/Desktop/project_chat/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/gregory/Desktop/project_chat/frontend/src/api/api.js","dependencies":[{"path":"/home/gregory/Desktop/project_chat/frontend/src/api/api.js","mtime":1586725072991},{"path":"/home/gregory/Desktop/project_chat/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1586725072215},{"path":"/home/gregory/Desktop/project_chat/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1586725072491},{"path":"/home/gregory/Desktop/project_chat/frontend/node_modules/babel-loader/lib/index.js","mtime":1586725072215},{"path":"/home/gregory/Desktop/project_chat/frontend/node_modules/eslint-loader/index.js","mtime":1586725071492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvZ3JlZ29yeS9EZXNrdG9wL3Byb2plY3RfY2hhdC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IGFsZXJ0Tm90aWZpZXJDaGFubmVsIH0gZnJvbSAnLi4vbWFpbic7Cgp2YXIgZ2V0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShwYXRoKSB7CiAgICB2YXIgdXJpLCByZXN1bHREYXRhLCByZXN1bHRTdGF0dXMsIHJlc3BvbnNlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICB1cmkgPSBnZXRSZXF1ZXN0VXJpKHBhdGgpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCh1cmkpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICByZXN1bHREYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICAgICAgICByZXN1bHRTdGF0dXMgPSByZXNwb25zZS5kYXRhLnN0YXR1czsKICAgICAgICAgICAgY29uc29sZS5sb2coIkdFVDogcmVzdWx0U3RhdHVzOiAiLCByZXN1bHRTdGF0dXMpOwoKICAgICAgICAgICAgaWYgKHJlc3VsdFN0YXR1cyAhPT0gdHJ1ZSkgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICBhbGVydE5vdGlmaWVyQ2hhbm5lbC4kZW1pdCgnc2hvdycsIHsKICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA1LAogICAgICAgICAgICAgICAgbWVzc2FnZTogJ0dldCByZXF1ZXN0IGVycm9yJwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXN1bHREYXRhKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gZ2V0KF94KSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKCnZhciBwb3N0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHBhdGgpIHsKICAgIHZhciBkYXRhLAogICAgICAgIHVyaSwKICAgICAgICByZXNwb25zZSwKICAgICAgICBfYXJnczIgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBkYXRhID0gX2FyZ3MyLmxlbmd0aCA+IDEgJiYgX2FyZ3MyWzFdICE9PSB1bmRlZmluZWQgPyBfYXJnczJbMV0gOiBudWxsOwogICAgICAgICAgICB1cmkgPSBnZXRSZXF1ZXN0VXJpKHBhdGgpOwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KHVyaSwgZGF0YSk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICBjb25zb2xlLmxvZygiUE9TVDogcmVzdWx0U3RhdHVzOiAiLCByZXNwb25zZS5kYXRhLnN0YXR1cyk7CgogICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5zdGF0dXMgIT09IHRydWUpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiZmFpbGVkIHJlc3BvbnNlOiAiLCByZXNwb25zZSk7CiAgICAgICAgICAgICAgYWxlcnROb3RpZmllckNoYW5uZWwuJGVtaXQoJ3Nob3cnLCB7CiAgICAgICAgICAgICAgICBkdXJhdGlvbjogNSwKICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdQb3N0IHJlcXVlc3QgZXJyb3InCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBwb3N0KF94MikgewogICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKZnVuY3Rpb24gZ2V0UmVxdWVzdFVyaShwYXRoKSB7CiAgcmV0dXJuICcvYXBpL3YxLycgKyBwYXRoOwp9CgpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0OiBnZXQsCiAgcG9zdDogcG9zdAp9Ow=="},{"version":3,"sources":["/home/gregory/Desktop/project_chat/frontend/src/api/api.js"],"names":["axios","alertNotifierChannel","get","path","uri","getRequestUri","response","resultData","data","resultStatus","status","console","log","$emit","duration","message","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,SAArC;;AAEA,IAAMC,GAAG;AAAA,qEAAG,iBAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACFC,YAAAA,GADE,GACIC,aAAa,CAACF,IAAD,CADjB;AAAA;AAAA,mBAKaH,KAAK,CAACE,GAAN,CAAUE,GAAV,CALb;;AAAA;AAKJE,YAAAA,QALI;AAMRC,YAAAA,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcA,IAA3B;AACAC,YAAAA,YAAY,GAAGH,QAAQ,CAACE,IAAT,CAAcE,MAA7B;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,YAAnC;;AAEA,gBAAIA,YAAY,KAAK,IAArB,EAA2B;AACvBE,cAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAL,cAAAA,oBAAoB,CAACY,KAArB,CAA2B,MAA3B,EAAmC;AAACC,gBAAAA,QAAQ,EAAE,CAAX;AAAcC,gBAAAA,OAAO,EAAE;AAAvB,eAAnC;AACH;;AAbO,6CAeDR,UAfC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAHL,GAAG;AAAA;AAAA;AAAA,GAAT;;AAkBA,IAAMc,IAAI;AAAA,sEAAG,kBAAgBb,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBK,YAAAA,IAAtB,8DAA6B,IAA7B;AACHJ,YAAAA,GADG,GACGC,aAAa,CAACF,IAAD,CADhB;AAAA;AAAA,mBAGYH,KAAK,CAACgB,IAAN,CAAWZ,GAAX,EAAgBI,IAAhB,CAHZ;;AAAA;AAGLF,YAAAA,QAHK;AAITK,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCN,QAAQ,CAACE,IAAT,CAAcE,MAAlD;;AAEA,gBAAIJ,QAAQ,CAACE,IAAT,CAAcE,MAAd,KAAyB,IAA7B,EAAmC;AAC/BC,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCN,QAAjC;AACAL,cAAAA,oBAAoB,CAACY,KAArB,CAA2B,MAA3B,EAAmC;AAACC,gBAAAA,QAAQ,EAAE,CAAX;AAAcC,gBAAAA,OAAO,EAAE;AAAvB,eAAnC;AACH;;AATQ,8CAWFT,QAAQ,CAACE,IAXP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJQ,IAAI;AAAA;AAAA;AAAA,GAAV;;AAcA,SAASX,aAAT,CAAuBF,IAAvB,EAA6B;AACzB,SAAO,aAAaA,IAApB;AACH;;AAED,eAAe;AACXD,EAAAA,GAAG,EAAHA,GADW;AAEXc,EAAAA,IAAI,EAAJA;AAFW,CAAf","sourcesContent":["import axios from 'axios'\nimport { alertNotifierChannel } from '../main';\n\nconst get = async function (path) {\n    const uri = getRequestUri(path);\n    let resultData;\n    let resultStatus;\n\n    let response = await axios.get(uri);\n    resultData = response.data.data;\n    resultStatus = response.data.status;\n    console.log(\"GET: resultStatus: \", resultStatus);\n\n    if (resultStatus !== true) {\n        console.log(response);\n        alertNotifierChannel.$emit('show', {duration: 5, message: 'Get request error'});\n    }\n\n    return resultData;\n};\n\nconst post = async function (path, data = null) {\n    const uri = getRequestUri(path);\n\n    let response = await axios.post(uri, data);\n    console.log(\"POST: resultStatus: \", response.data.status);\n\n    if (response.data.status !== true) {\n        console.log(\"failed response: \", response);\n        alertNotifierChannel.$emit('show', {duration: 5, message: 'Post request error'});\n    }\n\n    return response.data;\n};\n\nfunction getRequestUri(path) {\n    return '/api/v1/' + path;\n}\n\nexport default {\n    get,\n    post,\n};\n"]}]}