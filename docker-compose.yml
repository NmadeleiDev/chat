version: '3'

services:
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    ports:
    - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_ADDRESS: ${MONGO_ADDRESS}
    networks:
      - postgres_net
      - mongodb_net
      - docker_net

  mongodb:
    hostname: mongodb
    image: mongo:4.2.3
    container_name: mongodb
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - ./data/mongo:/data/db
    # uncomment the below line to setup mongo replica set!  But only after default setup! And then run rs.initiate() in mongo shell
    entrypoint: ["/usr/bin/mongod", "--port", "27017", "--dbpath", "/data/db", "--replSet", "rs0", "--bind_ip", "mongodb,localhost"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - mongodb_net

  postgres:
    image: postgres:12.2-alpine
    volumes:
      - ./data/pgsql:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: password
    networks:
      - postgres_net
    restart: on-failure

  server:
    build:
      context: ./src/nginx
      dockerfile: Dockerfile
    volumes:
      - /etc/localtime:/etc/localtime/:ro
      - /home/gregory/ssl_nginx/certs:/etc/nginx/certs
    ports:
    - ${FRONT_PORT}:80
    networks:
      - docker_net
    links:
      - backend
    restart: always

networks:
  postgres_net:
    external: false
  mongodb_net:
    external: false
  docker_net:
    external: false
